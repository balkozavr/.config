vim.keymap.set({ "n", "x" }, "j", "v:count == 0 ? 'gj' : 'j'", { desc = "Down", expr = true, silent = true })
vim.keymap.set({ "n", "x" }, "k", "v:count == 0 ? 'gk' : 'k'", { desc = "Up", expr = true, silent = true })
vim.keymap.set("n", "<Esc>", ":nohlsearch<CR>")
vim.keymap.set("n", "<leader>w", ":write<CR>", { desc = "Save File" })
vim.keymap.set("n", "<leader>q", ":quit!<CR>", { desc = "Quit" })
vim.keymap.set("n", "<leader>bd", ":bd<CR>", { desc = "Buffer Delete" })
vim.keymap.set("n", "<leader>bo", ":%bd|e#<CR>", { desc = "Buffer Delete Other", silent = true })
vim.keymap.set("n", "L", ":bnext<CR>", { desc = "Next buffer" })
vim.keymap.set("n", "H", ":bprevious<CR>", { desc = "Previous buffer" })
vim.keymap.set("n", "<leader>o", ":update<CR> :source<CR>", { desc = "Source File" })
vim.keymap.set({ "n", "v", "x" }, "<leader>y", '"+y', { desc = "Yank Clipboard" })
vim.keymap.set({ "n", "v", "x" }, "<leader>p", '"+p', { desc = "Paste Clipboard" })
vim.keymap.set("v", "<", "<gv", { desc = "Indent left and reselect" })
vim.keymap.set("v", ">", ">gv", { desc = "Indent right and reselect" })

vim.keymap.set("v", "<S-j>", ":<C-u>execute \"'<,'>move '>+\" . v:count1<cr>gv=gv", { desc = "Move Down" })
vim.keymap.set("v", "<S-k>", ":<C-u>execute \"'<,'>move '<-\" . (v:count1 + 1)<cr>gv=gv", { desc = "Move Up" })
vim.keymap.set("n", "<C-d>", "<C-d>zz", { desc = "Center cursor after moving down half-page" })
vim.keymap.set("n", "<C-u>", "<C-u>zz", { desc = "Center cursor after moving up half-page" })
vim.keymap.set("n", "n", "nzz", { desc = "Center cursor after checking the next match" })
vim.keymap.set("n", "N", "Nzz", { desc = "Center cursor after checking the previous match" })
vim.keymap.set("n", "<C-w>e", ":close<CR>", { desc = "Close window" })
vim.keymap.set("n", "<C-w><C-e>", ":close<CR>", { desc = "Close window" })
vim.keymap.set("n", "J", "mzJ`z", { desc = "Concat lines inplace" })
vim.keymap.set("n", "<leader>ce", "oif err != nil {<CR>return nil, err<CR>}<ESC>k$", { desc = "Go iferr" })
vim.keymap.set("n", "<leader>cx", ":!go run %<CR>", { desc = "Run go code" })
vim.keymap.set("n", "<leader>cr", vim.lsp.buf.rename, { desc = "Code Rename" })

vim.keymap.set("v", "<leader>cs", function()
	vim.cmd('normal! "zy')
	local pattern = vim.fn.escape(vim.fn.getreg("z"), "\\/.*$^~[]")
	local cmd = ":s/" .. pattern .. "//gI"
	local keys = vim.api.nvim_replace_termcodes(cmd .. "<Left><Left><Left>", true, false, true)
	vim.fn.feedkeys(keys, "t")
end, { desc = "Substitute selection in line" })

vim.keymap.set("v", "<leader>cgs", function()
	vim.cmd('normal! "zy')
	local pattern = vim.fn.escape(vim.fn.getreg("z"), "\\/.*$^~[]")
	local cmd = ":%s/" .. pattern .. "//gI"
	local keys = vim.api.nvim_replace_termcodes(cmd .. "<Left><Left><Left>", true, false, true)
	vim.fn.feedkeys(keys, "t")
end, { desc = "Substitute selection in file" })

vim.keymap.set("n", "<leader>cu", ":s//\\u~/i<CR>", { desc = "Case switched recent substitution" })
vim.keymap.set("n", "<leader>cgu", ":%s//\\u~/i<CR>", { desc = "Case switched recent substitution" })

vim.keymap.set("n", "<leader>ct", ":!go mod tidy<CR>", { desc = "Go mod tidy" })
